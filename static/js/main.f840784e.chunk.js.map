{"version":3,"sources":["store/reducers/userReducer.ts","store/actionTypes.ts","store/reducers/annotationReducer.ts","store/reducers/articleReducer.ts","store/reducers/colorReducer.ts","store/reducers/utilityReducer.ts","store/dataTypes.ts","store/actions.ts","store/selectors/colorSelector.ts","store/selectors/articleSelector.ts","store/selectors/userSelector.ts","store/selectors/annotationSelector.ts","store/selectors/utilitySelector.ts","store/index.ts","utils/addClass.tsx","utils/getColorClassName.ts","utils/getHighlightStyle.ts","utils/createHighlightStyle.ts","socket.ts","utils/hotKeys.ts","components/AnnotationPanel.tsx","components/QuestionCard.tsx","components/SentenceCard.tsx","components/Annotator.tsx","components/ColorLegend.tsx","components/Sentence.tsx","components/Article.tsx","components/ArticleCard.tsx","components/ArticleCardPanel.tsx","components/SetUsername.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["userReducer","state","action","type","Cookies","set","username","areAnnotationsEqual","a","b","articleId","sentenceIndex","annotator","category","annotationReducer","i","length","annotation","slice","defaultState","loadedArticles","categoryToArticleIdListMap","articleReducer","article","id","articleIds","paragraphIndex","sentences","paragraphToSentences","annotatorToColorMap","annotatorToAnnotatorsMap","existingCombinations","colorReducer","color","includes","className","utilityReducer","selectedSentence","selectedText","setCurrentArticleAction","currentArticle","allColors","setCurrentArticle","addAnnotation","rank","removeAnnotation","getColorState","store","colors","getAllColors","createSelector","getExistingCombinations","getArticleState","articles","getCategoryToArticleIdListMap","getLoadedArticles","getArticleIdList","map","getLastArticleId","list","index","indexOf","getNextArticleId","getArticle","getSentence","undefined","getUsername","isUserLoggedIn","getAnnotationState","annotations","getArticleAnnotations","filter","getAnnotations","isSentenceChecked","getUtilityState","utils","getCurrentArticle","getSelectedSentence","shouldSentenceScrollIntoView","sentenceIn","selectedIn","initialState","get","reducer","combineReducers","createStore","applyMiddleware","thunk","addClass","styles","head","document","getElementsByTagName","style","createElement","innerHTML","appendChild","getAlphabeticString","input","str","encoded","encodeURIComponent","replace","getColorClassName","annotators","_","isString","uniq","sort","join","getHighlightStyle","c","used","key","Math","floor","random","dispatch","createHighlightStyle","doesColorsExistInDocument","getState","highlightStyle","addColorsToDocument","socket","socketIOClient","on","selectSentenceWithOffset","offset","sentence","min","max","deselectSentence","goToArticleWithOffset","idList","window","history","pushState","hotKeyMap","ENTER","MOVE_UP","MOVE_DOWN","DESELECT","LAST_ARTICLE","NEXT_ARTICLE","hotKeyHandlers","isChecked","emit","connector","connect","AnnotationPanel","this","onRouteChanged","prevProps","props","location","leaveArticle","match","params","keyMap","handlers","React","Component","withRouter","mapStateToProps","QuestionCard","question","explanation","checked","shouldScrollIntoView","changeSelectedText","divRef","createRef","handleClick","handleContextMenu","e","preventDefault","setTimeout","prev","current","scrollIntoView","behavior","classList","add","remove","ref","onClick","onContextMenu","annotatedSentences","anns","lastArticleId","nextArticleId","updateAnnotationRank","Annotator","goToLastArticle","push","goToNextArticle","result","destination","source","destSentenceIndex","annotationIndex","newRank","destIndex","neighborSentenceIndex","count","ann","onDragEnd","bind","droppableId","provided","droppableProps","innerRef","draggableId","draggableProps","dragHandleProps","outline","placeholder","visibility","ColorLegend","plainText","actionName","parentElement","classNames","getClassName","ownProps","addArticle","updateParagraphToSentencesMap","blockContextMenu","event","paragraph","displayOnly","temp","trim","start","end","startsWith","paragraphs","getParagraph","ArticleCard","ArticleCardPanel","handleScroll","el","currentTarget","scrollTop","offsetHeight","scrollHeight","setState","maxArticleCount","onScroll","setUsername","handleChange","changeUsername","target","value","onChange","App","path","component","to","Boolean","hostname","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f840784e.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\nimport { CHANGE_USERNAME, ChangeUsernameActionType } from '../actionTypes';\n\nfunction userReducer(state: string = '', action: ChangeUsernameActionType) {\n  if (action.type === CHANGE_USERNAME) {\n    Cookies.set('username', action.username);\n    return action.username;\n  }\n\n  return state;\n}\n\nexport default userReducer;;\n","import { ArticleType, AnnotationType } from './dataTypes';\n\nexport const ADD_ARTICLE = 'ADD_ARTICLE';\nexport const REMOVE_ARTICLE = 'REMOVE_ARTICLE';\nexport const UPDATE_CATEGORY_ARTICLE_LIST = 'UPDATE_CATEGORY_ARTICLE_LIST';\nexport const UPDATE_PARAGRAPH_TO_SENTENCES = 'UPDATE_PARAGRAPH_TO_SENTENCES';\n\nexport const ADD_ANNOTATION = 'ADD_ANNOTATION';\nexport const REMOVE_ANNOTATION = 'REMOVE_ANNOTATION';\nexport const UPDATE_ANNOTATION_RANK = 'UPDATE_ANNOTATION_RANK';\n\nexport const CHANGE_COLOR = 'CHANGE_COLOR';\nexport const ADD_COLORS_TO_DOCUMENT = 'ADD_COLORS_TO_DOCUMENT';\n\nexport const CHANGE_USERNAME = 'CHANGE_USERNAME';\n\nexport const CHANGE_SELECTED_TEXT = 'CHANGE_SELECTED_TEXT';\nexport const SET_CURRENT_ARTICLE = 'SET_CURRENT_ARTICLE';\n\n/**\n * User\n */\nexport type ChangeUsernameActionType = {\n  type: typeof CHANGE_USERNAME\n  username: string\n}\n\n/**\n * Article\n */\nexport type AddArticleActionType = {\n  type: typeof ADD_ARTICLE\n  article: ArticleType\n}\n\nexport type RemoveArticleActionType = {\n  type: typeof REMOVE_ARTICLE\n  article: ArticleType\n}\n\nexport type UpdateCategoryArticleListActionType = {\n  type: typeof UPDATE_CATEGORY_ARTICLE_LIST\n  category: string\n  articleIds: number[]\n}\n\nexport type UpdateParagraphToSentencesActionType = {\n  type: typeof UPDATE_PARAGRAPH_TO_SENTENCES\n  article: ArticleType,\n  paragraphIndex: number,\n  sentences: number[],\n}\n\nexport type LoadedArticleActionType = AddArticleActionType | RemoveArticleActionType;\nexport type ArticleActionType = LoadedArticleActionType\n  | UpdateCategoryArticleListActionType\n  | UpdateParagraphToSentencesActionType;\n\n/**\n * Annotation\n */\nexport type AddAnnotationActionType = {\n  type: typeof ADD_ANNOTATION\n  annotation: AnnotationType\n}\n\nexport type RemoveAnnotationActionType = {\n  type: typeof REMOVE_ANNOTATION\n  annotation: AnnotationType\n}\n\nexport type UpdateAnnotationRankActionType = {\n  type: typeof UPDATE_ANNOTATION_RANK\n  annotation: AnnotationType\n}\n\nexport type AnnotationActionType = AddAnnotationActionType\n  | RemoveAnnotationActionType\n  | UpdateAnnotationRankActionType;\n\n/**\n * Color\n */\nexport type ChangeColorActionType = {\n  type: typeof CHANGE_COLOR\n  username: string\n  color: string\n}\n\nexport type AddColorsToDocumentActionType = {\n  type: typeof ADD_COLORS_TO_DOCUMENT\n  className: string\n}\n\nexport type ColorActionType = ChangeColorActionType | AddColorsToDocumentActionType;\n\n/**\n * Utility\n */\nexport type ChangeSelectedTextActionType = {\n  type: typeof CHANGE_SELECTED_TEXT\n  selectedText: {\n    articleId: number\n    category: string\n    sentenceIndex: number\n    selectedIn: 'ARTICLE_SECTION' | 'ANNOTATION_SECTION' | 'HOT_KEY' | 'DESELECT'\n  }\n}\n\nexport type SetCurrentArticleActionType = {\n  type: typeof SET_CURRENT_ARTICLE\n  articleId: number\n  category: string\n}\n\nexport type UtilityActionType = ChangeSelectedTextActionType | SetCurrentArticleActionType;\n","import { AnnotationType } from '../dataTypes';\nimport {\n  ADD_ANNOTATION, REMOVE_ANNOTATION, UPDATE_ANNOTATION_RANK,\n  AnnotationActionType,\n} from '../actionTypes';\n\nfunction areAnnotationsEqual(a: AnnotationType, b: AnnotationType) {\n  return a.articleId === b.articleId\n    && a.sentenceIndex === b.sentenceIndex\n    && a.annotator === b.annotator\n    && a.category === b.category;\n}\n\nfunction annotationReducer(state: AnnotationType[] = [], action: AnnotationActionType) {\n  switch (action.type) {\n    case ADD_ANNOTATION:\n      for (let i = 0; i < state.length; i++) {\n        if (areAnnotationsEqual(action.annotation, state[i])) return state;\n      }\n      return [...state, action.annotation];\n\n    case REMOVE_ANNOTATION:\n      for (let i = 0; i < state.length; i++) {\n        if (areAnnotationsEqual(action.annotation, state[i])) {\n          return [...state.slice(0, i), ...state.slice(i + 1)];\n        }\n      }\n      break;\n    case UPDATE_ANNOTATION_RANK:\n      const { annotation } = action;\n      for (let i = 0; i < state.length; i++) {\n        if (areAnnotationsEqual(annotation, state[i])) {\n          return [...state.slice(0, i), annotation, ...state.slice(i + 1)];\n        }\n      }\n      break;\n  }\n  return state;\n}\n\nexport default annotationReducer;\n","import { ArticleStateType, ArticleType } from '../dataTypes';\nimport {\n  ADD_ARTICLE, REMOVE_ARTICLE, UPDATE_CATEGORY_ARTICLE_LIST,\n  ArticleActionType, LoadedArticleActionType, UpdateCategoryArticleListActionType,\n  UPDATE_PARAGRAPH_TO_SENTENCES, UpdateParagraphToSentencesActionType,\n} from '../actionTypes';\n\nconst defaultState: ArticleStateType = {\n  loadedArticles: [],\n  categoryToArticleIdListMap: {},\n};\n\nfunction articleReducer(state: ArticleStateType = defaultState, action: ArticleActionType) {\n  let article: ArticleType;\n\n  switch (action.type) {\n    case ADD_ARTICLE:\n      article = (action as LoadedArticleActionType).article;\n      for (let i = 0; i < state.loadedArticles.length; i++) {\n        if (state.loadedArticles[i].id === article.id &&\n          state.loadedArticles[i].category === article.category) {\n          return {\n            ...state,\n            loadedArticles: [\n              ...state.loadedArticles.slice(0, i),\n              article,\n              ...state.loadedArticles.slice(i + 1),\n            ],\n          };\n        }\n      }\n      return {\n        ...state,\n        loadedArticles: [...state.loadedArticles, article],\n      };\n\n    case REMOVE_ARTICLE:\n      article = (action as LoadedArticleActionType).article;\n      for (let i = 0; i < state.loadedArticles.length; i++) {\n        if (state.loadedArticles[i] === article) {\n          return {\n            ...state,\n            loadedArticles: [...state.loadedArticles.slice(0, i), ...state.loadedArticles.slice(i + 1)],\n          };\n        }\n      }\n      break;\n    \n    case UPDATE_CATEGORY_ARTICLE_LIST:\n      const { category, articleIds } = action as UpdateCategoryArticleListActionType;\n      return {\n        ...state,\n        categoryToArticleIdListMap: {\n          ...state.categoryToArticleIdListMap,\n          [category]: articleIds,\n        },\n      };\n\n    case UPDATE_PARAGRAPH_TO_SENTENCES:\n      article = (action as UpdateParagraphToSentencesActionType).article;\n      const { paragraphIndex, sentences } = action as UpdateParagraphToSentencesActionType;\n      for (let i = 0; i < state.loadedArticles.length; i++) {\n        let a = state.loadedArticles[i];\n        if (a.id === article.id && a.category === article.category) {\n          a = { ...a };\n          a.paragraphToSentences = a.paragraphToSentences || [];\n          a.paragraphToSentences[paragraphIndex] = sentences;\n          return {\n            ...state,\n            loadedArticles: [\n              ...state.loadedArticles.slice(0, i),\n              a,\n              ...state.loadedArticles.slice(i + 1),\n            ],\n          };\n        }\n      }\n  }\n\n  return state;\n}\n\nexport default articleReducer;\n","import { ADD_COLORS_TO_DOCUMENT, CHANGE_COLOR, ColorActionType } from '../actionTypes';\nimport { ColorsType } from '../dataTypes';\n\nconst defaultState: ColorsType = {\n  annotatorToColorMap: {},\n  annotatorToAnnotatorsMap: {},\n  existingCombinations: [],\n};\n\nfunction colorReducer(state: ColorsType = defaultState, action: ColorActionType) {\n  switch (action.type) {\n    case CHANGE_COLOR:\n      const { username, color } = action;\n      return {\n        ...state,\n        annotatorToColorMap: {\n          ...state.annotatorToColorMap,\n          [username]: color,\n        },\n      };\n    case ADD_COLORS_TO_DOCUMENT:\n      if (!state.existingCombinations.includes(action.className)) {\n        return {\n          ...state,\n          existingCombinations: [...state.existingCombinations, action.className],\n        };\n      }\n  }\n  return state;\n}\n\nexport default colorReducer;\n","import {\n  CHANGE_SELECTED_TEXT, SET_CURRENT_ARTICLE,\n  UtilityActionType, SetCurrentArticleActionType,\n} from '../actionTypes';\nimport { UtilityType } from '../dataTypes';\n\nfunction utilityReducer(state: UtilityType = {}, action: UtilityActionType) {\n  switch (action.type) {\n    case CHANGE_SELECTED_TEXT:\n      return {\n        ...state,\n        selectedSentence: action.selectedText,\n      };\n    case SET_CURRENT_ARTICLE:\n      const setCurrentArticleAction = action as SetCurrentArticleActionType;\n      const { articleId, category } = setCurrentArticleAction;\n      return {\n        ...state,\n        currentArticle: { articleId, category },\n      };\n  }\n  return state;\n}\n\nexport default utilityReducer;\n","export type ArticleType = {\n  id: number;\n  category: string;\n  article: string;\n  question: string;\n  explanation: string;\n  answer: number;\n  paragraphs: string[];\n  sentences: string[];\n  checkedSentences: number[];\n  annotations?: AnnotationType[];\n  paragraphToSentences?: number[][];\n}\n\nexport type AnnotationType = {\n  articleId: number;\n  category: string;\n  sentenceIndex: number;\n  annotator: string;\n  rank?: number;\n}\n\nexport type ColorsType = {\n  annotatorToColorMap: Record<string, string>,\n  annotatorToAnnotatorsMap: Record<string, string[]>,\n  existingCombinations: string[],\n};\n\nexport const allColors = [\n  'rgb(214, 157, 177)',\n  'rgb(255, 227, 134)',\n  'rgb(190, 144, 212)',\n  'rgb(141, 195, 234)',\n  'rgb(215, 186, 229)',\n  'rgba(0, 181, 204, 1)',\n  'rgb(140, 20, 252)',\n  'rgb(241, 169, 160)',\n  'rgb(169, 222, 204)',\n  'rgb(145, 61, 136)',\n  'rgb(226, 106, 106)',\n  'rgb(118, 93, 105)',\n  'rgb(154, 18, 179)',\n];\n\nexport type ArticleStateType = {\n  categoryToArticleIdListMap: Record<string, number[]>;\n  loadedArticles: ArticleType[];\n};\n\nexport type UtilityType = {\n  selectedSentence?: {\n    articleId: number;\n    category: string;\n    sentenceIndex: number;\n    selectedIn: 'ARTICLE_SECTION' | 'ANNOTATION_SECTION' | 'HOT_KEY' | 'DESELECT';\n  },\n  currentArticle?: {\n    articleId: number;\n    category: string;\n  },\n}\n\nexport type StateType = {\n  username?: string;\n  colors: ColorsType;\n  articles: ArticleStateType;\n  annotations: AnnotationType[];\n  utils: UtilityType;\n}\n","import {\n  CHANGE_USERNAME,\n  ChangeUsernameActionType,\n  ADD_COLORS_TO_DOCUMENT,\n  AddColorsToDocumentActionType,\n  ADD_ANNOTATION,\n  AddAnnotationActionType,\n  REMOVE_ANNOTATION,\n  RemoveAnnotationActionType,\n  SET_CURRENT_ARTICLE,\n  SetCurrentArticleActionType,\n} from './actionTypes';\n\nexport function changeUsername(username: string): ChangeUsernameActionType {\n  return {\n    type: CHANGE_USERNAME,\n    username,\n  };\n}\n\nexport function setCurrentArticle(articleId: number, category: string): SetCurrentArticleActionType {\n  return {\n    type: SET_CURRENT_ARTICLE,\n    articleId,\n    category,\n  };\n}\n\nexport function addColorsToDocument(className: string): AddColorsToDocumentActionType {\n  return {\n    type: ADD_COLORS_TO_DOCUMENT,\n    className,\n  };\n}\n\nexport function addAnnotation(\n  articleId: number,\n  category: string,\n  sentenceIndex: number,\n  annotator: string,\n  rank: number = 0): AddAnnotationActionType {\n  return {\n    type: ADD_ANNOTATION,\n    annotation: {\n      articleId,\n      category,\n      sentenceIndex,\n      annotator,\n      rank,\n    }\n  }\n}\n\nexport function removeAnnotation(\n  articleId: number,\n  category: string,\n  sentenceIndex: number,\n  annotator: string): RemoveAnnotationActionType {\n  return {\n    type: REMOVE_ANNOTATION,\n    annotation: {\n      articleId,\n      category,\n      sentenceIndex,\n      annotator,\n    }\n  }\n}\n","import { StateType } from '../dataTypes';\nimport { createSelector } from 'reselect';\n\nexport const getColorState = (store: StateType) => store.colors;\n\nexport const getAllColors = createSelector(\n  getColorState,\n  state => state.annotatorToColorMap,\n);\n\nexport const getAnnotatorColors = (annotators: string[]) => createSelector(\n  getAllColors,\n  colorState => {\n    const colors: Record<string, string> = {};\n    for (const annotator of annotators) {\n      colors[annotator] = colorState[annotator];\n    }\n    return colors;\n  },\n);\n\nexport const getExistingCombinations = createSelector(\n  getColorState,\n  state => state.existingCombinations,\n);\n\nexport const doesColorsExistInDocument = (className: string) => createSelector(\n  getExistingCombinations,\n  state => state.includes(className),\n);\n","import { StateType } from '../dataTypes';\nimport { createSelector } from 'reselect';\n\nexport const getArticleState = (store: StateType) => {\n  return store.articles;\n}\n\nexport const getCategoryToArticleIdListMap = createSelector(\n  getArticleState,\n  state => state.categoryToArticleIdListMap,\n);\n\nexport const getLoadedArticles = createSelector(\n  getArticleState,\n  state => state.loadedArticles,\n);\n\nexport const getArticleIdList = (category: string) => createSelector(\n  getCategoryToArticleIdListMap,\n  map => map[category],\n);\n\nexport const getLastArticleId = (articleId: number, category: string) => createSelector(\n  getArticleIdList(category),\n  list => {\n    if (!list) return -1;\n    const index = list.indexOf(articleId);\n    if (index <= 0) return -1;\n    return list[index - 1];\n  },\n);\n\nexport const getNextArticleId = (articleId: number, category: string) => createSelector(\n  getArticleIdList(category),\n  list => {\n    if (!list) return -1;\n    const index = list.indexOf(articleId);\n    if (index < 0 || index + 1 === list.length) return -1;\n    return list[index + 1];\n  },\n);\n\nexport const getArticle = (id: number, category: string) => createSelector(\n  getLoadedArticles,\n  articles => {\n    for (const article of articles) {\n      if (article.id === id && article.category === category) {\n        return article;\n      }\n    }\n    return undefined;\n  }\n);\n\nexport const getSentence = (articleId: number, category: string, sentenceIndex: number) => createSelector(\n  getArticle(articleId, category),\n  article => {\n    if (article === undefined) return;\n    return article.sentences[sentenceIndex];\n  }\n);\n","import { StateType } from '../dataTypes';\nimport { createSelector } from 'reselect';\n\nexport const getUsername = (store: StateType) => {\n  return store.username;\n}\n\nexport const isUserLoggedIn = createSelector(\n  getUsername,\n  username => username !== undefined && username.length > 0,\n);\n","import { StateType } from '../dataTypes';\nimport { getUsername } from './userSelector';\nimport { createSelector } from 'reselect';\nimport _ from 'lodash';\n\nexport const getAnnotationState = (store: StateType) => {\n  return store.annotations;\n}\n\nexport const getArticleAnnotations = (articleId: number, category: string) => createSelector(\n  getAnnotationState,\n  annotations => annotations.filter(annotation => (\n    annotation.articleId === articleId\n    && annotation.category === category\n  )),\n);\n\nexport const getArticleAnnotators = (articleId: number, category: string) => createSelector(\n  getArticleAnnotations(articleId, category),\n  getUsername,\n  (annotations, username) => {\n    const annotators = annotations\n      .map(a => a.annotator)\n      .filter(a => a !== username);\n    annotators.push(username || '');\n    return _.uniq(annotators);\n  },\n)\n\nexport const getAnnotations = (articleId: number, category: string, sentenceIndex: number) => createSelector(\n  getArticleAnnotations(articleId, category),\n  annotations => annotations.filter(annotation => annotation.sentenceIndex === sentenceIndex),\n);\n\nexport const isSentenceChecked = (articleId: number, category: string, sentenceIndex: number) => createSelector(\n  getUsername,\n  getAnnotations(articleId, category, sentenceIndex),\n  (username, annotations) => {\n    for (const annotation of annotations) {\n      if (annotation.annotator === username)\n        return true;\n    }\n    return false;\n  }\n);\n\nexport const getAnnotatedSentences = (articleId: number, category: string) => createSelector(\n  getAnnotationState,\n  getUsername,\n  (annotations, username) => {\n    const anns = annotations\n      .filter(a => a.articleId === articleId && a.category === category)\n      .sort((a, b) => {\n        if ((a.annotator === username) !== (b.annotator === username))\n          return a.annotator === username ? -1 : 1;\n        if (a.rank !== b.rank)\n          return (b.rank || 0) - (a.rank || 0);\n        return a.sentenceIndex - b.sentenceIndex;\n      })\n      .map(a => a.sentenceIndex);\n    return _.uniq(anns);\n  },\n);\n\nexport const getAnnotators = (articleId: number, category: string, sentenceIndex: number) => createSelector(\n  getAnnotations(articleId, category, sentenceIndex),\n  annotations => annotations.map(annotation => annotation.annotator),\n);\n","import { StateType } from '../dataTypes';\n\nexport const getUtilityState = (store: StateType) => {\n  return store.utils;\n}\n\nexport const getCurrentArticle = (store: StateType) => {\n  return getUtilityState(store).currentArticle;\n}\n\nexport const getSelectedSentence = (store: StateType) => {\n  return getUtilityState(store).selectedSentence;\n}\n\nexport const shouldSentenceScrollIntoView = (\n  store: StateType,\n  articleId: number,\n  category: string,\n  sentenceIndex: number,\n  sentenceIn: 'ARTICLE_SECTION' | 'ANNOTATION_SECTION' | 'HOT_KEY' | 'DESELECT'\n) => {\n  const utils = getUtilityState(store);\n  if (!utils.selectedSentence) return false;\n  const { selectedSentence } = utils;\n  if (selectedSentence.selectedIn === 'DESELECT') return false;\n  return selectedSentence.articleId === articleId\n    && selectedSentence.sentenceIndex === sentenceIndex\n    && selectedSentence.category === category\n    && sentenceIn !== selectedSentence.selectedIn;\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { StateType } from './dataTypes';\nimport userReducer from './reducers/userReducer';\nimport annotationReducer from './reducers/annotationReducer';\nimport articleReducer from './reducers/articleReducer';\nimport colorReducer from './reducers/colorReducer';\nimport utilityReducer from './reducers/utilityReducer';\nimport Cookies from 'js-cookie';\n\nexport * from './dataTypes';\nexport * from './actionTypes';\nexport * from './actions';\nexport * from './selectors';\nexport * from './reducers';\n\nconst initialState: StateType = {\n  username: Cookies.get('username'),\n  colors: {\n    annotatorToColorMap: {},\n    annotatorToAnnotatorsMap: {},\n    existingCombinations: [],\n  },\n  articles: {\n    categoryToArticleIdListMap: {},\n    loadedArticles: [],\n  },\n  annotations: [],\n  utils: {},\n};\n\nconst reducer = combineReducers({\n  username: userReducer,\n  annotations: annotationReducer,\n  articles: articleReducer,\n  colors: colorReducer,\n  utils: utilityReducer,\n})\n\nexport default createStore(reducer, initialState, applyMiddleware(thunk));\n","function addClass(className: string, styles: string) {\n  if (styles.length === 0) return;\n  const head = document.getElementsByTagName('head')[0];\n  const style = document.createElement('style');\n  style.type = 'text/css';\n  style.innerHTML = `.${className} {${styles}}`;\n  head.appendChild(style);\n}\n\nexport default addClass;\n","import _ from 'lodash';\n\nfunction getAlphabeticString(input: string) {\n  let str = '';\n  for (let i = 0; i < input.length; i++) {\n    if (input[i] >= 'a' && input[i] <= 'z') str += input[i];\n    else if (input[i] >= 'A' && input[i] <= 'Z') str += input[i];\n    else {\n      let encoded = encodeURIComponent(input[i]);\n      while (encoded.indexOf('%') >= 0) {\n        encoded = encoded.replace('%', '---');\n      }\n      str += encoded;\n    }\n  }\n  return str;\n}\n\nfunction getColorClassName(annotators: string[] | string) {\n  if (_.isString(annotators)) annotators = [annotators];\n  if (annotators.length === 0) return '';\n  annotators = _.uniq(annotators).sort();\n  return `highlight-${annotators.map(getAlphabeticString).join('-')}`;\n}\n\nexport default getColorClassName;\n","import _ from 'lodash';\nimport store, { CHANGE_COLOR, allColors } from '../store';\n\nfunction getHighlightStyle(colors: Record<string, string>, annotators: string[] | string) {\n  if (_.isString(annotators)) annotators = [annotators];\n  if (annotators.length === 0) return '';\n  annotators = _.uniq(annotators).sort();\n\n  for (const annotator of annotators) {\n    if (!colors[annotator]) {\n      let c;\n      for (const color of allColors) {\n        let used = false;\n        for (const key in colors) {\n          if (colors[key] === color) {\n            used = true;\n            break;\n          }\n        }\n        if (!used) {\n          c = color;\n          break;\n        }\n      }\n\n      if (!c) c = allColors[Math.floor(Math.random() * allColors.length)];\n\n      store.dispatch({\n        type: CHANGE_COLOR,\n        username: annotator,\n        color: c,\n      });\n      colors[annotator] = c;\n    }\n  }\n\n  let style = 'background-image: linear-gradient(';\n  if (annotators.length === 1) {\n    const color = colors[annotators[0]];\n    style += `transparent 0px, transparent 50%, ${color} 0px, ${color});`\n    return style;\n  }\n\n  for (let i = 0; i < annotators.length; i++) {\n    const annotator = annotators[i];\n    const color = colors[annotator];\n    style += `${color} 0px, ${color} ${(i + 1) * 100 / annotators.length}%`;\n    if (annotators.indexOf(annotator) !== annotators.length - 1) {\n      style += ',';\n    } else {\n      style += ');'\n    }\n  }\n  return style;\n}\n\nexport default getHighlightStyle;\n","import addClass from './addClass';\nimport getColorClassName from './getColorClassName';\nimport getHighlightStyle from './getHighlightStyle';\nimport store, { addColorsToDocument, doesColorsExistInDocument, getAllColors } from '../store';\n\nfunction createHighlightStyle(annotators: string[] | string) {\n  const className = getColorClassName(annotators);\n  if (doesColorsExistInDocument(className)(store.getState())) return;\n  const highlightStyle = getHighlightStyle(getAllColors(store.getState()), annotators);\n  addClass(className, highlightStyle);\n  store.dispatch(addColorsToDocument(className));\n}\n\nexport default createHighlightStyle;\n","import socketIOClient from 'socket.io-client';\nimport store, {\n  AnnotationType, UPDATE_CATEGORY_ARTICLE_LIST, UPDATE_ANNOTATION_RANK,\n  addAnnotation, removeAnnotation,\n} from './store';\n\nconst socket = socketIOClient(`https://backend.annotator.zehua.li/`);\n\nexport const fetchArticleList = (category: string) => {\n  socket.emit('refresh article list', { category }, (articleIds: number[]) => {\n    store.dispatch({\n      type: UPDATE_CATEGORY_ARTICLE_LIST,\n      category,\n      articleIds,\n    });\n  });\n};\n\nsocket.on('add annotation', (annotation: AnnotationType) => {\n  const { articleId, category, annotator, sentenceIndex } = annotation;\n  store.dispatch(addAnnotation(articleId, category, sentenceIndex, annotator));\n});\n\nsocket.on('remove annotation', (annotation: AnnotationType) => {\n  const { articleId, category, annotator, sentenceIndex } = annotation;\n  store.dispatch(removeAnnotation(articleId, category, sentenceIndex, annotator));\n});\n\nsocket.on('update annotation rank', (annotation: AnnotationType) => {\n  store.dispatch({\n    type: UPDATE_ANNOTATION_RANK,\n    annotation,\n  });\n});\n\nexport default socket;\n","import store, {\n  getSelectedSentence, isSentenceChecked, getUsername,\n  addAnnotation, removeAnnotation, getCurrentArticle, getArticleIdList,\n  ChangeSelectedTextActionType, CHANGE_SELECTED_TEXT, setCurrentArticle,\n  getArticle,\n} from '../store';\nimport socket from '../socket';\n\nconst toggleAnnotationForCurrentSentence = () => {\n  const sentence = getSelectedSentence(store.getState());\n  if (!sentence || sentence.articleId < 0) return;\n\n  const username = getUsername(store.getState());\n  if (!username) return;\n\n  const { articleId, category, sentenceIndex} = sentence;\n  const isChecked = isSentenceChecked(articleId, category, sentenceIndex)(store.getState());\n  if (isChecked) {\n    store.dispatch(removeAnnotation(articleId, category, sentenceIndex, username));\n  } else {\n    store.dispatch(addAnnotation(articleId, category, sentenceIndex, username));\n  }\n  socket.emit(`${isChecked ? 'remove' : 'add'} annotation`, {\n    ...sentence,\n    annotator: username,\n    rank: 0,\n  });\n};\n\nconst selectPreviousSentence = () => selectSentenceWithOffset(-1);\nconst selectNextSentence = () => selectSentenceWithOffset(1);\n\nconst selectSentenceWithOffset = (offset: number) => {\n  const article = getCurrentArticle(store.getState());\n  if (!article) return;\n  const a = getArticle(article.articleId, article.category)(store.getState());\n  if (!a) return;\n  const sentences = a.sentences;\n  let sentence = getSelectedSentence(store.getState());\n  if (!sentence || sentence.articleId !== article.articleId || sentence.articleId < 0) {\n    sentence = {\n      ...article,\n      sentenceIndex: -offset,\n      selectedIn: 'HOT_KEY',\n    };\n  }\n\n  sentence.sentenceIndex += offset;\n  sentence.sentenceIndex = Math.min(sentences.length - 1, sentence.sentenceIndex);\n  sentence.sentenceIndex = Math.max(0, sentence.sentenceIndex);\n  sentence.selectedIn = 'HOT_KEY';\n\n  deselectSentence();\n  store.dispatch({\n    type: CHANGE_SELECTED_TEXT,\n    selectedText: sentence,\n  } as ChangeSelectedTextActionType);\n};\n\nconst deselectSentence = () => {\n  let sentence = getSelectedSentence(store.getState());\n  if (sentence) {\n    return store.dispatch({\n      type: CHANGE_SELECTED_TEXT,\n      selectedText: { ...sentence, selectedIn: 'DESELECT' },\n    } as ChangeSelectedTextActionType);\n  }\n\n  store.dispatch({\n    type: CHANGE_SELECTED_TEXT,\n    selectedText: { articleId: -1, category: '', sentenceIndex: -1, selectedIn: 'DESELECT' },\n  } as ChangeSelectedTextActionType);\n}\n\nconst goToLastArticle = () => goToArticleWithOffset(-1);\nconst goToNextArticle = () => goToArticleWithOffset(1);\n\nconst goToArticleWithOffset = (offset: number) => {\n  const article = getCurrentArticle(store.getState());\n  if (!article) return;\n  const idList = getArticleIdList(article.category)(store.getState());\n  let index = idList.indexOf(article.articleId) + offset;\n  index = Math.min(idList.length - 1, index);\n  index = Math.max(0, index);\n  store.dispatch(setCurrentArticle(idList[index], article.category));\n  window.history.pushState(null, '', `/article-annotator/${article.category}/${idList[index]}`);\n}\n\nexport const hotKeyMap = {\n  ENTER: ['enter', 'k'],\n  MOVE_UP: ['w', 'h'],\n  MOVE_DOWN: ['s', 'j'],\n  DESELECT: ['q', 'l'],\n  LAST_ARTICLE: ['[', 'y'],\n  NEXT_ARTICLE: [']', 'u'],\n};\n\nexport const hotKeyHandlers = {\n  ENTER: toggleAnnotationForCurrentSentence,\n  MOVE_UP: selectPreviousSentence,\n  MOVE_DOWN: selectNextSentence,\n  DESELECT: deselectSentence,\n  LAST_ARTICLE: goToLastArticle,\n  NEXT_ARTICLE: goToNextArticle,\n};\n","import React from 'react';\nimport { Dispatch } from 'redux';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport { hotKeyMap, hotKeyHandlers } from '../utils';\nimport { StateType, setCurrentArticle, getCurrentArticle, isUserLoggedIn } from '../store';\nimport { Article, Annotator } from '.';\nimport socket from '../socket';\n\nconst mapStateToProps = (state: StateType) => ({\n  articleId: getCurrentArticle(state)?.articleId,\n  category: getCurrentArticle(state)?.category,\n  isUserLoggedIn: isUserLoggedIn(state),\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  setCurrentArticle: (articleId: number, category: string) => {\n    dispatch(setCurrentArticle(articleId, category));\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype PropsType = RouteComponentProps & PropsFromRedux;\n\nclass AnnotationPanel extends React.Component<PropsType> {\n  componentDidMount() {\n    this.onRouteChanged();\n  }\n\n  componentDidUpdate(prevProps: PropsType) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    this.leaveArticle();\n    const { match } = this.props;\n    const articleId: number = +(match.params as any)['articleId'];\n    const category: string = (match.params as any)['category'];\n    this.props.setCurrentArticle(articleId, category);\n    socket.emit('join article', { articleId, category });\n  }\n\n  leaveArticle() {\n    if (this.props.articleId && this.props.category) {\n      const { articleId, category } = this.props;\n      socket.emit('leave article', { articleId, category });\n    }\n  }\n\n  render() {\n    if (!this.props.articleId || !this.props.category)\n      return <div className=\"annotation-panel-container\" />;\n    const { articleId, category } = this.props;\n    return (\n      <div className=\"annotation-panel-container\">\n        <Article articleId={articleId} category={category} />\n        <Annotator articleId={articleId} category={category} />\n        <GlobalHotKeys keyMap={hotKeyMap} handlers={hotKeyHandlers} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connector(AnnotationPanel));\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { StateType, getArticle } from '../store';\n\ntype QuestionCardProps = {\n  articleId: number;\n  category: string;\n}\n\nconst mapStateToProps = (state: StateType, props: QuestionCardProps) => ({\n  article: getArticle(props.articleId, props.category)(state),\n});\n\nconst connector = connect(mapStateToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nclass QuestionCard extends React.Component<QuestionCardProps & PropsFromRedux, {}> {\n  render() {\n    if (!this.props.article) return <div />;\n    const { question, explanation } = this.props.article;\n    return (\n      <p className=\"explanation\">\n        <b><i>{question}</i></b><br />\n        {explanation}\n      </p>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(QuestionCard);\n","import React, { MouseEvent } from 'react';\nimport { Dispatch } from 'redux';\nimport { connect, ConnectedProps } from 'react-redux';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport {\n  StateType,\n  getSentence, isSentenceChecked, getUsername, shouldSentenceScrollIntoView,\n  ADD_ANNOTATION, REMOVE_ANNOTATION, CHANGE_SELECTED_TEXT,\n} from '../store';\nimport socket from '../socket';\n\nconst section = 'ANNOTATION_SECTION';\n\nconst mapStateToProps = (state: StateType, props: SentenceCardProps) => ({\n  sentence: getSentence(props.articleId, props.category, props.sentenceIndex)(state),\n  checked: isSentenceChecked(props.articleId, props.category, props.sentenceIndex)(state),\n  username: getUsername(state),\n  shouldScrollIntoView: shouldSentenceScrollIntoView(\n    state,\n    props.articleId,\n    props.category,\n    props.sentenceIndex,\n    section,\n  ),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addAnnotation: (articleId: number, category: string, sentenceIndex: number, annotator: string) => {\n    dispatch({\n      type: ADD_ANNOTATION,\n      annotation: {\n        articleId, category, sentenceIndex, annotator,\n      },\n    });\n  },\n  removeAnnotation: (articleId: number, category: string, sentenceIndex: number, annotator: string) => {\n    dispatch({\n      type: REMOVE_ANNOTATION,\n      annotation: {\n        articleId, category, sentenceIndex, annotator,\n      },\n    });\n  },\n  changeSelectedText: (articleId: number, category: string, sentenceIndex: number) => {\n    dispatch({\n      type: CHANGE_SELECTED_TEXT,\n      selectedText: {\n        articleId,\n        category,\n        sentenceIndex,\n        selectedIn: section,\n      },\n    });\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype SentenceCardProps = {\n  articleId: number;\n  category: string;\n  sentenceIndex: number;\n  index?: number;\n}\n\ntype PropsType = SentenceCardProps & PropsFromRedux;\n\nclass SentenceCard extends React.Component<PropsType, {}> {\n  divRef = React.createRef<HTMLDivElement>();\n\n  componentDidUpdate(prev: PropsType) {\n    if (prev.shouldScrollIntoView === this.props.shouldScrollIntoView) return;\n    if (this.props.shouldScrollIntoView) {\n      if (!this.divRef || !this.divRef.current) return;\n      scrollIntoView(this.divRef.current, { behavior: 'smooth' });\n      this.divRef.current.classList.add('selected-sentence-card');\n      setTimeout(() => this.divRef.current?.classList.remove('selected-sentence-card'), 1500);\n    }\n  }\n\n  handleClick = () => {\n    if (!this.props.username) return;\n    const { articleId, category, sentenceIndex, username } = this.props; \n    if (this.props.checked) {\n      this.props.removeAnnotation(articleId, category, sentenceIndex, username);\n    } else {\n      this.props.addAnnotation(articleId, category, sentenceIndex, username);\n    }\n    socket.emit(\n      this.props.checked ? 'remove annotation' : 'add annotation',\n      { articleId, category, sentenceIndex, annotator: username },\n    );\n  }\n\n  handleContextMenu = (e: MouseEvent) => {\n    e.preventDefault();\n    const { articleId, category, sentenceIndex } = this.props;\n    this.props.changeSelectedText(-1, '', -1);\n    setTimeout(() => this.props.changeSelectedText(articleId, category, sentenceIndex), 0);\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.divRef}\n        onClick={this.handleClick}\n        onContextMenu={this.handleContextMenu}\n        className={`sentence-card ${this.props.checked ? 'checked' : ''}`}>\n        <p>{this.props.sentence}</p>\n        <div className=\"side\"><span>{this.props.index}</span></div>\n        <div className=\"sentence-card-background\" />\n      </div>\n    )\n  }\n}\n\nexport default connector(SentenceCard);\n","import React from 'react';\nimport { Dispatch } from 'redux';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport {\n  StateType, AnnotationType, addAnnotation,\n  getArticleAnnotations, getUsername, UPDATE_ANNOTATION_RANK,\n  getAnnotatedSentences, getLastArticleId, getNextArticleId,\n} from '../store';\nimport socket from '../socket';\nimport QuestionCard from './QuestionCard';\nimport SentenceCard from './SentenceCard';\n\ntype AnnotatorProps = {\n  articleId: number,\n  category: string,\n}\n\nconst mapStateToProps = (state: StateType, props: AnnotatorProps) => ({\n  annotatedSentences: getAnnotatedSentences(props.articleId, props.category)(state),\n  lastArticleId: getLastArticleId(props.articleId, props.category)(state),\n  nextArticleId: getNextArticleId(props.articleId, props.category)(state),\n  annotations: getArticleAnnotations(props.articleId, props.category)(state),\n  username: getUsername(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  updateAnnotationRank: (annotation: AnnotationType) => {\n    dispatch({\n      type: UPDATE_ANNOTATION_RANK,\n      annotation,\n    });\n  },\n  addAnnotation: (articleId: number, category: string, sentenceIndex: number, username: string) => {\n    dispatch(addAnnotation(articleId, category, sentenceIndex, username));\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype PropsType = AnnotatorProps & PropsFromRedux & RouteComponentProps;\n\nclass Annotator extends React.Component<PropsType, {}> {\n  goToLastArticle = () => {\n    const { category, history, lastArticleId } = this.props;\n    if (lastArticleId < 0) return;\n    history.push(`/${category}/${lastArticleId}`);\n  }\n\n  goToNextArticle = () => {\n    const { category, history, nextArticleId } = this.props;\n    if (nextArticleId < 0) return;\n    history.push(`/${category}/${nextArticleId}`);\n  }\n\n  onDragEnd(result: DropResult) {\n    if (!result.destination) return;\n    const sentenceIndex = this.props.annotatedSentences[result.source.index];\n    const destSentenceIndex = this.props.annotatedSentences[result.destination.index];\n\n    let annotationIndex = null;\n    for (let i = 0; i < this.props.annotations.length; i++) {\n      const annotation = this.props.annotations[i];\n      if (sentenceIndex === annotation.sentenceIndex\n        && annotation.annotator === this.props.username) {\n        annotationIndex = i;\n        break;\n      }\n    }\n    if (annotationIndex === null) {\n      if (!this.props.username) return;\n      this.props.addAnnotation(\n        this.props.articleId,\n        this.props.category,\n        sentenceIndex,\n        this.props.username,\n      );\n    }\n\n    if (sentenceIndex === destSentenceIndex) return;\n\n    let newRank = null;\n    const destIndex = result.destination.index;\n    let neighborSentenceIndex = -1;\n    if (destIndex !== 0 && destIndex !== this.props.annotatedSentences.length - 1) {\n      neighborSentenceIndex = result.source.index > destIndex\n        ? this.props.annotatedSentences[destIndex - 1]\n        : this.props.annotatedSentences[destIndex + 1];\n    }\n    let count = 0;\n    for (let i = 0; i < this.props.annotations.length && count < 2; i++) {\n      const annotation = this.props.annotations[i];\n      if ([destSentenceIndex, neighborSentenceIndex].includes(annotation.sentenceIndex)\n        && annotation.annotator === this.props.username) {\n        newRank = (newRank || 0) + (annotation.rank || 1) / 2;\n        count++;\n      }\n    }\n\n    if (newRank === null) return;\n    if (destIndex === 0) {\n      if (count < 1) return;\n      newRank = 2 * newRank + 1024;\n    } else if (destIndex === this.props.annotatedSentences.length - 1) {\n      if (count < 1) return;\n    } else if (count < 2) return;\n\n    const ann = {\n      articleId: this.props.articleId,\n      category: this.props.category,\n      sentenceIndex: sentenceIndex,\n      annotator: this.props.username || '',\n      rank: newRank,\n    };\n\n    this.props.updateAnnotationRank(ann);\n    socket.emit('update annotation rank', ann);\n  }\n\n  render() {\n    return (\n      <div className=\"annotator-container\">\n        <QuestionCard articleId={this.props.articleId} category={this.props.category} />\n        <h3>Select sentences that are relative to the question.</h3>\n\n        <DragDropContext onDragEnd={this.onDragEnd.bind(this)}>\n          <Droppable droppableId=\"annotation-list\">\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}>\n                {(this.props.annotatedSentences || []).map((sentenceIndex, index) => (\n                  <Draggable\n                    key={`sentence-card-${sentenceIndex}`}\n                    draggableId={`sentence-${sentenceIndex}`}\n                    index={index}>\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={{ outline: 0, ...provided.draggableProps.style }}>\n                        <SentenceCard\n                          articleId={this.props.articleId}\n                          category={this.props.category}\n                          sentenceIndex={sentenceIndex}\n                          index={index + 1} />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <div className=\"last-next-buttons\">\n          <span\n            onClick={this.goToLastArticle}\n            className=\"last-article-button\"\n            style={this.props.lastArticleId < 0 ? {visibility: 'hidden'} : {}}\n          >\n            Last Article\n          </span>\n          <span\n            onClick={this.goToNextArticle}\n            className=\"next-article-button\"\n            style={this.props.nextArticleId < 0 ? {visibility: 'hidden'} : {}}\n          >\n            Next Article\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connector(Annotator));\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { createHighlightStyle, getColorClassName } from '../utils';\n\ntype ColorLegendProps = {\n  articleId: string;\n  annotators: string[];\n}\ntype PropsType = ColorLegendProps & RouteComponentProps;\n\nclass ColorLegend extends React.Component<PropsType> {\n  componentDidUpdate(prev: PropsType) {\n    if (prev.annotators !== this.props.annotators) {\n      for (const annotator of this.props.annotators) {\n        createHighlightStyle(annotator);\n      }\n    }\n  }\n\n  handleClick = () => {\n    const { history, match } = this.props;\n    const category: string = (match.params as any).category;\n    history.push(`/${category}`);\n  }\n\n  render() {\n    return (\n      <p className=\"legends\">\n        <span onClick={this.handleClick}>Go Back</span>\n        {this.props.annotators.map(annotator => (\n          <span className={getColorClassName([annotator])} key={annotator}>\n            {annotator}\n          </span>\n        ))}\n      </p>\n    );\n  }\n}\n\nexport default withRouter(ColorLegend);\n","import React, { MouseEvent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport {\n  StateType, getSelectedSentence,\n  getSentence, getAnnotators, getUsername, addAnnotation, removeAnnotation,\n  shouldSentenceScrollIntoView, CHANGE_SELECTED_TEXT, ChangeSelectedTextActionType,\n} from '../store';\nimport { getColorClassName, createHighlightStyle } from '../utils';\nimport socket from '../socket';\n\ntype SentenceProps = {\n  sentenceIndex: number;\n  articleId: number;\n  category: string;\n  plainText?: boolean;\n}\n\nconst section = 'ARTICLE_SECTION';\n\nconst mapStateToProps = (state: StateType, props: SentenceProps) => ({\n  sentence: getSentence(props.articleId, props.category, props.sentenceIndex)(state),\n  annotators: getAnnotators(props.articleId, props.category, props.sentenceIndex)(state),\n  username: getUsername(state),\n  selectedSentence: getSelectedSentence(state),\n  shouldScrollIntoView: props.plainText ? null : shouldSentenceScrollIntoView(\n    state,\n    props.articleId,\n    props.category,\n    props.sentenceIndex,\n    section,\n  ),\n});\n\nconst connector = connect(mapStateToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype PropsType = SentenceProps & PropsFromRedux\n\nclass Sentence extends React.Component<PropsType> {\n  ref = React.createRef<HTMLSpanElement>();\n\n  componentDidUpdate(prev: PropsType) {\n    if (prev.shouldScrollIntoView === this.props.shouldScrollIntoView) return;\n    if (this.props.shouldScrollIntoView) {\n      if (!this.ref || !this.ref.current) return;\n      scrollIntoView(this.ref.current, { behavior: 'smooth' });\n      const isHotKeyTriggered = this.props.selectedSentence?.selectedIn === 'HOT_KEY';\n      if (!isHotKeyTriggered) {\n        this.ref.current.classList.add('selected-sentence');\n        setTimeout(() => this.ref.current?.classList.remove('selected-sentence'), 1500);\n      }\n    }\n  }\n\n  handleClick = () => {\n    if (!this.props.annotators || !this.props.username) return;\n    if (!this.props.dispatch) return;\n    const { articleId, category, sentenceIndex, username } = this.props;\n    let actionName = 'remove annotation';\n    if (this.props.annotators.includes(this.props.username)) {\n      this.props.dispatch(removeAnnotation(articleId, category, sentenceIndex, username));\n    } else {\n      actionName = 'add annotation';\n      this.props.dispatch(addAnnotation(articleId, category, sentenceIndex, username));\n    }\n    socket.emit(actionName, { articleId, category, sentenceIndex, annotator: username, rank: 0 });\n  }\n\n  handleContextMenu = (e: MouseEvent) => {\n    e.preventDefault();\n    const { articleId, category, sentenceIndex } = this.props;\n    this.props.dispatch({\n      type: CHANGE_SELECTED_TEXT,\n      selectedText: { articleId: -1, category: '', sentenceIndex: -1, selectedIn: section },\n    } as ChangeSelectedTextActionType);\n    setTimeout(() => {\n      this.props.dispatch({\n        type: CHANGE_SELECTED_TEXT,\n        selectedText: { articleId, category, sentenceIndex, selectedIn: section },\n      } as ChangeSelectedTextActionType);\n    }, 0);\n    if (this.props.annotators.length === 0) {\n      this.ref.current?.parentElement?.parentElement?.classList.add('shakey-sentence');\n      setTimeout(() => {\n        this.ref.current?.parentElement?.parentElement?.classList.remove('shakey-sentence');\n      }, 1000);\n    }\n  }\n\n  getClassName() {\n    const classNames = [getColorClassName(this.props.annotators || [])];\n    if (this.props.shouldScrollIntoView\n      && this.props.selectedSentence?.selectedIn === 'HOT_KEY') {\n      classNames.push('hotkey-selected-sentence');\n    }\n    return classNames.join(' ');\n  }\n\n  render() {\n    if (this.props.plainText) {\n      return (\n        <span className={getColorClassName(this.props.annotators || [])}>\n          {this.props.sentence}\n          {createHighlightStyle(this.props.annotators || [])}\n        </span>\n      );\n    }\n\n    return (\n      <span\n        ref={this.ref}\n        onClick={this.handleClick}\n        onContextMenu={this.handleContextMenu}\n        className={this.getClassName()}>\n        {this.props.sentence}\n        {createHighlightStyle(this.props.annotators || [])}\n      </span>\n    );\n  }\n}\n\nexport default connector(Sentence);\n","import React, { MouseEvent } from 'react';\nimport { Dispatch } from 'redux';\nimport { connect, ConnectedProps } from 'react-redux';\nimport socket from '../socket';\nimport ColorLegend from './ColorLegend';\nimport Sentence from './Sentence';\nimport {\n  StateType, ArticleType, UPDATE_PARAGRAPH_TO_SENTENCES,\n  getArticle, addAnnotation, ADD_ARTICLE, getArticleAnnotators,\n} from '../store';\n\ntype ArticleProps = {\n  articleId: number,\n  category: string,\n  displayOnly?: boolean,\n}\n\nconst mapStateToProps = (state: StateType, ownProps: ArticleProps) => ({\n  article: getArticle(ownProps.articleId, ownProps.category)(state),\n  annotators: getArticleAnnotators(ownProps.articleId, ownProps.category)(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addAnnotation: (article: ArticleType, sentenceIndex: number, annotator: string, rank?: number) => {\n    dispatch(addAnnotation(article.id, article.category, sentenceIndex, annotator, rank));\n  },\n  addArticle: (article: ArticleType) => {\n    dispatch({\n      type: ADD_ARTICLE,\n      article,\n    });\n  },\n  updateParagraphToSentencesMap: (article: ArticleType, paragraphIndex: number, sentences: number[]) => {\n    dispatch({\n      type: UPDATE_PARAGRAPH_TO_SENTENCES,\n      article,\n      paragraphIndex,\n      sentences,\n    });\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype PropsType = ArticleProps & PropsFromRedux;\n\nclass Article extends React.Component<PropsType, {}> {\n  componentDidMount() {\n    this.getArticle();\n  }\n\n  componentDidUpdate(prevProps: PropsType) {\n    if (prevProps.articleId !== this.props.articleId ||\n      prevProps.category !== this.props.category) {\n      this.getArticle();\n    }\n  }\n\n  getArticle = () => {\n    socket.emit('get article', {\n      articleId: this.props.articleId,\n      category: this.props.category,\n    }, (article: ArticleType) => {\n      this.props.addArticle(article);\n      for (const annotation of article.annotations || []) {\n        this.props.addAnnotation(article, annotation.sentenceIndex, annotation.annotator, annotation.rank);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    socket.emit('leave article', {\n      articleId: this.props.articleId,\n      category: this.props.category,\n    });\n  }\n\n  getParagraph(paragraph: string, index: number) {\n    if (!this.props.article) return;\n    let sentences: number[] = [];\n    const { article, articleId, category, displayOnly } = this.props;\n\n    if (this.props.article.paragraphToSentences && this.props.article.paragraphToSentences[index]) {\n      sentences = this.props.article.paragraphToSentences[index];\n    } else {\n      let temp = paragraph.trim();\n      let start = -1;\n      let end = -1;\n      for (let i = 0; i < this.props.article.sentences.length; i++) {\n        if (temp.startsWith(this.props.article.sentences[i])) {\n          temp = temp.slice(this.props.article.sentences[i].length).trim();\n          if (start === -1) start = i;\n          if (temp.length === 0) {\n            end = i;\n            break;\n          }\n        } else {\n          start = -1;\n          temp = paragraph.trim();\n        }\n      }\n\n      for (let i = start; i <= end; i++) {\n        sentences.push(i);\n      }\n      this.props.updateParagraphToSentencesMap(article, index, sentences);\n    }\n\n    return (\n      <p key={`paragraph-${index}`}>\n        {sentences.map((index) => (\n          <span key={`sentence-${index}`}>\n            <Sentence\n              articleId={articleId}\n              category={category}\n              sentenceIndex={index}\n              plainText={displayOnly}\n            />\n            {' '}\n          </span>\n        ))}\n      </p>\n    );\n  }\n\n  blockContextMenu = (event: MouseEvent) => event.preventDefault();\n\n  render() {\n    if (!this.props.article) return <div className=\"article-container\" />;\n    if (this.props.displayOnly) {\n      return (\n        <div className=\"article-container\">\n          {this.props.article.paragraphs.map((paragraph, index) => (\n            this.getParagraph(paragraph, index)\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"article-container\" onContextMenu={this.blockContextMenu}>\n        <ColorLegend \n          articleId=\"1\"\n          annotators={this.props.annotators}\n        />\n        {this.props.article.paragraphs.map((paragraph, index) => (\n          this.getParagraph(paragraph, index)\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connector(Article);\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport Article from './Article';\n\ntype ArticleCardProps = RouteComponentProps & {\n  articleId: number,\n  category: string,\n}\n\nclass ArticleCard extends React.Component<ArticleCardProps> {\n  handleClick = () => {\n    this.props.history.push(`/${this.props.category}/${this.props.articleId}`);\n  }\n\n  render() {\n    return (\n      <div\n        onClick={this.handleClick}\n        className=\"article-card-container\">\n        <Article {...this.props} displayOnly={true} />\n        <div className=\"article-container-mask\" />\n        <span>Article {this.props.articleId}</span>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ArticleCard);\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { StateType, getArticleIdList } from '../store';\nimport { fetchArticleList } from '../socket';\nimport ArticleCard from './ArticleCard';\n\ntype ArticleCardPanelProps = {\n  category: string,\n}\n\nconst mapStateToProps = (state: StateType, props: ArticleCardPanelProps & RouteComponentProps) => ({\n  articleIds: getArticleIdList((props.match.params as any).category)(state),\n  category: (props.match.params as any).category,\n});\n\nconst connector = connect(mapStateToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype PropsType = ArticleCardPanelProps & PropsFromRedux;\n\ntype ArticleCardPanelState = {\n  maxArticleCount: number;\n}\n\nclass ArticleCardPanel extends React.Component<PropsType, ArticleCardPanelState> {\n  constructor(props: PropsType) {\n    super(props);\n    this.state = {\n      maxArticleCount: 20,\n    };\n  }\n\n  componentDidMount() {\n    fetchArticleList(this.props.category);\n  }\n\n  handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n    const el = event.currentTarget;\n    if (el.scrollTop + el.offsetHeight >= el.scrollHeight) {\n      setTimeout(() => {\n        this.setState(state => ({\n          maxArticleCount: state.maxArticleCount + 20,\n        }));\n      }, 1000);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"article-card-panel-container\" onScroll={this.handleScroll}>\n        {(this.props.articleIds || [])\n          .slice(0, this.state.maxArticleCount)\n          .map(articleId => (\n          <ArticleCard\n            category={this.props.category}\n            articleId={articleId}\n            key={`article-card-${articleId}`}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connector(ArticleCardPanel));\n","import React, { ChangeEvent } from 'react';\nimport { Dispatch } from 'redux';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { CHANGE_USERNAME } from '../store';\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  setUsername: (username: string) => {\n    dispatch({\n      type: CHANGE_USERNAME,\n      username,\n    });\n  }\n});\n\nconst connector = connect(null, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype SetUsernameState = {\n  username: string;\n}\n\nclass SetUsername extends React.Component<PropsFromRedux, SetUsernameState> {\n  constructor(props: PropsFromRedux) {\n    super(props);\n    this.state = { username: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.changeUsername = this.changeUsername.bind(this);\n  }\n\n  handleChange(event: ChangeEvent<HTMLInputElement>) {\n    this.setState({ username: event.target.value });\n  }\n\n  changeUsername() {\n    if (!this.props.setUsername) return;\n    this.props.setUsername(this.state.username);\n  }\n\n  render() {\n    return (\n      <div className=\"username-container\">\n        <input\n          placeholder=\"Username\"\n          className=\"username-input\"\n          onChange={this.handleChange} />\n        <span\n          className=\"username-button\"\n          onClick={this.changeUsername}>\n          Set Username\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default connector(SetUsername);\n","import React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { Switch, Route, Redirect, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { StateType, isUserLoggedIn } from './store';\nimport './App.css';\nimport { AnnotationPanel, ArticleCardPanel, SetUsername } from './components'\n\nconst mapStateToProps = (state: StateType) => ({\n  isUserLoggedIn: isUserLoggedIn(state),\n});\n\nconst connector = connect(mapStateToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nclass App extends React.Component<PropsFromRedux & RouteComponentProps> {\n  render() {\n    if (!this.props.isUserLoggedIn) {\n      return <SetUsername />;\n    }\n\n    return (\n      <Switch>\n        <Route path=\"/:category/:articleId\" component={AnnotationPanel} />\n        <Route path=\"/:category\" component={ArticleCardPanel} />\n        <Route path=\"/\">\n          <Redirect to=\"/Question 1 test\" />\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nexport default withRouter(connector(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"article-annotator\">\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}